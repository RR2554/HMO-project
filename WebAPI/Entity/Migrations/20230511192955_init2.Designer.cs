// <auto-generated />
using System;
using Entity;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Entity.Migrations
{
    [DbContext(typeof(DB))]
    [Migration("20230511192955_init2")]
    partial class init2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entity.Models.Corona_Details", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("PositiveDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("memberId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("recoveryDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("memberId")
                        .IsUnique()
                        .HasFilter("[memberId] IS NOT NULL");

                    b.ToTable("Corona_Details");
                });

            modelBuilder.Entity("Entity.Models.Member", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("Date_of_birth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mobile_Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumHouse")
                        .HasColumnType("int");

                    b.Property<string>("city")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("first_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("last_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tz")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("Entity.Models.Vaccine", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("VaccineDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("memberId")
                        .HasColumnType("bigint");

                    b.Property<string>("memberIdentity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("vaccine_manufacturer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("memberId");

                    b.ToTable("Vaccines");
                });

            modelBuilder.Entity("Entity.Models.Corona_Details", b =>
                {
                    b.HasOne("Entity.Models.Member", "member")
                        .WithOne("Corona_Details")
                        .HasForeignKey("Entity.Models.Corona_Details", "memberId");

                    b.Navigation("member");
                });

            modelBuilder.Entity("Entity.Models.Vaccine", b =>
                {
                    b.HasOne("Entity.Models.Member", "member")
                        .WithMany("vaccines")
                        .HasForeignKey("memberId");

                    b.Navigation("member");
                });

            modelBuilder.Entity("Entity.Models.Member", b =>
                {
                    b.Navigation("Corona_Details");

                    b.Navigation("vaccines");
                });
#pragma warning restore 612, 618
        }
    }
}
